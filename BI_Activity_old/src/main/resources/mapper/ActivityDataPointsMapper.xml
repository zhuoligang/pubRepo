<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bi.activity.dao.ActivityDataPointsMapper" >
  <resultMap id="BaseResultMap" type="com.bi.activity.entity.ActivityDataPoints" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="member_tel" property="memberTel" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
    <result column="index_code" property="indexCode" jdbcType="INTEGER" />
    <result column="conf_code" property="confCode" jdbcType="INTEGER" />
    <result column="special_code" property="specialCode" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, parent_id,member_tel, reg_time, reg_ip,index_code,conf_code,special_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity_data_points
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activity_data_points
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bi.activity.entity.ActivityDataPoints" >
    insert into activity_data_points (id, member_id,parent_id, member_tel, 
      reg_time, reg_ip,index_code,conf_code,special_code)
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{memberTel,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{regIp,jdbcType=VARCHAR}, #{indexCode,jdbcType=INTEGER}
      , #{confCode,jdbcType=INTEGER},, #{specialCode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" 
  parameterType="com.bi.activity.entity.ActivityDataPoints" >
    insert into activity_data_points
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>      
      <if test="memberTel != null" >
        member_tel,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="regIp != null" >
        reg_ip,
      </if>
      <if test="indexCode != null" >
        index_code,
      </if>
      <if test="confCode != null" >
        conf_code,
      </if>
      <if test="specialCode != null" >
        special_code,
      </if>              
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>      
      <if test="memberTel != null" >
        #{memberTel,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null" >
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="indexCode != null" >
        #{indexCode,jdbcType=INTEGER},
      </if>
      <if test="confCode != null" >
        #{confCode,jdbcType=INTEGER},
      </if> 
      <if test="specialCode != null" >
        #{specialCode,jdbcType=INTEGER},
      </if>                 
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bi.activity.entity.ActivityDataPoints" >
    update activity_data_points
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>      
      <if test="memberTel != null" >
        member_tel = #{memberTel,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null" >
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="indexCode != null" >
        index_code = #{indexCode,jdbcType=INTEGER},
      </if>
      <if test="confCode != null" >
        conf_code = #{confCode,jdbcType=INTEGER},
      </if>
      <if test="specialCode != null" >
        special_code = #{specialCode,jdbcType=INTEGER},
      </if>                   
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bi.activity.entity.ActivityDataPoints" >
    update activity_data_points
    set member_id = #{memberId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      member_tel = #{memberTel,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      reg_ip = #{regIp,jdbcType=VARCHAR},
	  index_code = #{indexCode,jdbcType=INTEGER},
	  conf_code = #{confCode,jdbcType=INTEGER}, 
	  special_code = #{specialCode,jdbcType=INTEGER}     
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByMemberId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity_data_points
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>  
  
  
  <select  id="ranking" resultType="com.bi.activity.entity.Ranking" parameterType="map" >
	SELECT a.member_id as memberId,
	b.inviteCount,sum(a.conf_coin_count) as totalAward
	FROM activity_tail a 
	LEFT JOIN 
	(SELECT parent_id,COUNT(1) as inviteCount from activity_data_points where conf_code > 2 GROUP BY parent_id) b 
	ON 
	b.parent_id = a.member_id
	GROUP BY a.member_id 
	ORDER BY inviteCount DESC,totalAward desc,max(a.tail_time) asc
	<if  test="rankingCount != null">
		LIMIT ${rankingCount};
	</if>
  </select>
	
	
  <select  id="selectRankingByMemberId" resultType="com.bi.activity.entity.Ranking" parameterType="map" >
    SELECT a.member_id as memberId,
	(SELECT COUNT(1) from activity_data_points where parent_id = a.member_id and conf_code > 2) as inviteCount,
	sum(a.conf_coin_count) as totalAward
	from activity_tail a 
	where a.member_id = #{memberId,jdbcType=INTEGER}
  </select>
  
    	<!--分页 -->
	<sql id="base_page">
	<if test="(dataIndex != null and dataIndex != '' or dataIndex == 0) and (pageSize != null and pageSize != '')">
			limit #{dataIndex},#{pageSize}
	</if>
	</sql>
  
	<select  id="friends" resultType="com.bi.activity.entity.ActivityDataPoints" parameterType="map" >
	select 
    <include refid="Base_Column_List" />
    from activity_data_points
    where
    conf_code > 0 and 
    parent_id = #{parentId,jdbcType=INTEGER}
        <include refid="base_page" />
	</select>
  
  	<select  id="friendsCount" resultType="java.lang.Integer" parameterType="map" >
	select 
    count(1)
    from activity_data_points
    where
    conf_code > 0 and
    parent_id = #{parentId,jdbcType=INTEGER}
	</select>
 <!-- 数据统计 -->
   <select id="selectNewUserByDay" resultType="com.bi.activity.dto.StatisticsRegUser" >
    SELECT 
    a.member_id ,b.name,a.member_tel ,a.reg_time,a.reg_ip ,a.parent_id,b.idcard 
    FROM activity_data_points as a LEFT JOIN member as b ON a.member_id=b.id
    where reg_time >= #{0,jdbcType=TIMESTAMP} and reg_time <![CDATA[ <= ]]> #{1,jdbcType=TIMESTAMP} AND a.reg_ip !=''
  </select> 
  
  <select id="selectActiveTimeByHour" resultType="com.bi.activity.dto.AdminLog" >    
    select 
    LEFT(DATE_FORMAT(operationtime,'%H:%i:%s'),2) as hour, COUNT(*) as num 
    from member_log 
    WHERE operationtime >= #{0} 
    AND operationtime <![CDATA[ <= ]]> #{1} 
    AND operation='登录'
    GROUP BY LEFT(DATE_FORMAT(operationtime,'%H:%i:%s'),2)  
  </select>
  
  <select id="selectIsInvitationRegUserByDay" resultType="com.bi.activity.dto.StatisticsInvitationRegUser" >    
    SELECT 
    COUNT(1) as isInvitition
    FROM activity_data_points 
    WHERE  parent_id!=0
    AND reg_time >= #{0} 
    AND reg_time <![CDATA[ <= ]]> #{1} 
    AND reg_ip !=''
  </select>
  
  <select id="selectNotInvitationRegUserByDay" resultType="com.bi.activity.dto.StatisticsInvitationRegUser" >    
    SELECT 
    COUNT(1) as notInvitition
    FROM activity_data_points 
    WHERE  parent_id=0
    AND reg_time >= #{0} 
    AND reg_time <![CDATA[ <= ]]> #{1} 
    AND reg_ip !=''
  </select>
  
  <select id="selectInvitationRegUserTask" resultType="com.bi.activity.dto.StaticticsTask" >      
	SELECT
	conf_code task,COUNT(DISTINCT parent_id) num
	FROM activity_tail
	WHERE parent_id 
	NOT IN(
	select parent_id FROM activity_tail
	WHERE conf_code=1
	group by parent_id HAVING COUNT(1)=1
	)
	AND tail_time <![CDATA[ <= ]]> #{0}
	GROUP BY conf_code
  </select>
  
  
</mapper>