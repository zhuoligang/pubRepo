package org.bibr.accountcheck.center.thread;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

import org.bibr.accountcheck.center.constant.AccountCheckConstant;
import org.bibr.accountcheck.center.exception.BusinessException;
import org.bibr.accountcheck.center.util.RestTemplateUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;

/**
 * 
* @ClassName: CoreCheckThread
* @Description: TODO(核心校验)
* @author Administrator
* @date 2018年12月18日下午6:05:59
*
 */
public class CoreCheckThread implements Runnable{
	private final static Logger logger = LoggerFactory.getLogger(CoreCheckThread.class);
	//用户uuid
	private String userId;
	//币种国际码
	private String coinCode;
	
	public CoreCheckThread(String userId, String coinCode) {
		super();
		this.userId = userId;
		this.coinCode = coinCode;
	}
	
	@Override
	public void run() {
		Map<String,Object> map_ = null;
		try {//调用资产接口，获取用户该币种资产信息asset-account-controller
			String url = AccountCheckConstant.ASSET_ACCOUNT_ALL;
			Map<String,String> sendMap = new HashMap<>();
			sendMap.put("userId", userId);
			sendMap.put("coinCode", coinCode);
			String result = RestTemplateUtil.postForEntity(url, JSONObject.toJSONString(sendMap));
			map_ = (Map<String, Object>) JSON.parse(result);
			if(map_.get("code") == null || Integer.parseInt(map_.get("code").toString()) != 200){
				throw new BusinessException(AccountCheckConstant.CODE_500, "资产中心系统错误，请联系管理员");
			}
		} catch (Exception e) {
			throw new BusinessException(AccountCheckConstant.CODE_500, "调用资产中心错误");
		}
		
		//该币种可用资产总额
		BigDecimal countActive = null;
		//该币种冻结总额
		BigDecimal countDisable = null;
		
		//调用资产接口，获取用户该币种交易收、支总额
		
		
		
	}

}
